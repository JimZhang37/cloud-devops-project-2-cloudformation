Description: >
  zzzzzz
Parameters:
  EnvironmentName:
    Description: aaa
    Type: String

Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow http to our loadbalancer
      VpcId: 
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} LB Security Group

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow http and ssh to our web server
      SecurityGroupEgress: 
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Web Server Security Group
      VpcId: 
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"

  ProfileWithRolesForOurApp:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - UdacityS3ReadOnlyEC2

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties: 
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          aws s3 cp s3://udacity-demo-1/udacity.zip .
          unzip -o udacity.zip
      ImageId: ami-04b9e92b5572fa0d1
      IamInstanceProfile: !Ref ProfileWithRolesForOurApp
      SecurityGroups:
        - Ref: WebServerSecGroup
      InstanceType: t3.small
      KeyName: cloud devops
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'

          
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      LaunchConfigurationName: 
        Ref: WebAppLaunchConfig
      MaxSize: '5'
      MinSize: '1'
      TargetGroupARNs:
        - Ref: WebAppTargetGroup
      VPCZoneIdentifier: 
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-PRIV-NETS"
      Tags: 
        - Key: Name 
          PropagateAtLaunch: false
          Value: !Sub ${EnvironmentName} Web app auto scaling group

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      SecurityGroups: 
        - Ref: LBSecGroup
      Subnets: 
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"  
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN" 
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Web app LB
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 

      DefaultActions: 
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn: 
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties: 
      Actions: 
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
      Conditions: 
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref 'Listener'
      Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /phpinfo.php
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Web app targret group
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"


Outputs: 

  LBDNS: 
    Description: LB DNS NAME
    Value: 
      !Join
        - ''
        - - 'http://'
          - Fn::GetAtt: [WebAppLB, DNSName]
    Export:
      Name: !Sub ${EnvironmentName}-LB-DNS


